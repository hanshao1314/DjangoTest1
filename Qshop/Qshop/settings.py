"""
Django settings for Qshop project.

Generated by 'django-admin startproject' using Django 2.1.8.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$#^mh=_=5j32v9z=$w9$f$17&f59$li%uk94de#tw8r#$&&ki+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Buyer',
    'Seller',
    'djcelery',
]

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',  #缓存开始
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'Qshop.middleware.MiddleWaretTest',
    'django.middleware.cache.FetchFromCacheMiddleware',  #：缓存结束
]

ROOT_URLCONF = 'Qshop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,  #;代表自动检索app下面的templates目录下的html文件
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Qshop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=(
    os.path.join(BASE_DIR,"static"),
)

# STATIC_ROOT=os.path.join(BASE_DIR,"static") #:静态文件的根目录，和STATICFILES_DIR，MEDIA_URL,MEDIA_ROOT有冲突。

MEDIA_URL="/media/"
MEDIA_ROOT=os.path.join(BASE_DIR,"static")

alipay_public_key_string="""-----BEGIN PUBLIC KEY-----
MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxY39nx0uk184zcCfJP8Uj46bqBf4oJ0iyW40g2sg2MjTfbEv/ukjmZUIkVOwSpRvly0II2nOgUtTf+6Q4lgRSFAkHRGKp8sqR3n+MmrEZsoNCn18TJ0pqXOCmjh0ZO0aHjm3UR0OeWy/HK98CEfKp8LuHqJIwkNkgS7DFLzZfZ2MMpPHEWn0YzikQl30OcG6Kg0LXbPV3jvP35f1Tokhzax+zqRIbfTWiWHWgLbAz4nY+yDnKn/+oJTY2jIcVKckj9JqipDUrtSkVLrRU6jpA/xIT/94eR/J8hMZcp4GDHcIvFiSBp/ASWfmHLMKRloid9ougHwtN4eAE/TXgln/9wIDAQAB
-----END PUBLIC KEY-----"""

alipay_private_key_string="""-----BEGIN RSA PRIVATE KEY-----
MIIEowIBAAKCAQEAxY39nx0uk184zcCfJP8Uj46bqBf4oJ0iyW40g2sg2MjTfbEv/ukjmZUIkVOwSpRvly0II2nOgUtTf+6Q4lgRSFAkHRGKp8sqR3n+MmrEZsoNCn18TJ0pqXOCmjh0ZO0aHjm3UR0OeWy/HK98CEfKp8LuHqJIwkNkgS7DFLzZfZ2MMpPHEWn0YzikQl30OcG6Kg0LXbPV3jvP35f1Tokhzax+zqRIbfTWiWHWgLbAz4nY+yDnKn/+oJTY2jIcVKckj9JqipDUrtSkVLrRU6jpA/xIT/94eR/J8hMZcp4GDHcIvFiSBp/ASWfmHLMKRloid9ougHwtN4eAE/TXgln/9wIDAQABAoIBAAVjxlOc/DRRGL+kTbM4slroTR7c6I+ZOeW89/nN5muDryFywBh4S9xY0I8GdXzTZ+f79ojgzh2A7JpE6/cA6BfM9+9DF0FUraadkW3Ws90KDikHG2kLsKNK33lNqP9H6LqCYJn57PcrHFuv/fZL3x+MleqICuwh4pATsobSUCy5H1pnBd37xVzQUCtsy83Y1P41OZYw9lLeLVy3QepPW5O9ObW6I3M0HSzEBqST5lW2yADlxR2nIhPC0onkElWdToATLfBXI2aTorljSz512VbayCnizsgqMfWr57Ip7/7MSv16OzxWH82SLzp+2vW2pQ1+FQtuqiwXrQaxdXmwZqECgYEA75D5O1rmT6TezhE6Xlpl7PGkWoR59a/TyHzc2G8Vl6BAo7LSS5JYW27DjdiqyVvDFPtIH9k8m17p+fONhF8Rxun+OYmgjmESIikKtKYyQIeT03pFu9n9I+EP3rq1qG7O2ymZhcV1AdKduNwy7pccKrMBTcGTFoepQVRD2cjMPk0CgYEA0xtABPuTxeB5MdzQFKKPgufplEv5qKctAdEstGpv1VTSvFUc2AMwwf5iO/hvM1r9f+Ss9u9LcbuGdf5Sqgtl0JBl8YB/fQm+4s/EEPjngpYpmWR6EhogoFvFLmU0OgCxqHOlLIf86FC030Q2BUR9JGug9kqxTmrg8s/xrtAxgVMCgYAtAXdRB0qtO7P/0oy8nQ747IyL1Md0uIt45rw2jOfpjFmYZ0fKmruusahbRZEQMwT7NBngodcY+UPLiU3UyGd2jw8LkCdxmBrn//3a4j4ekVncKORg3hsIWoe4uCrYcbi6w53r26SXqxGmYPfQiuLnwqlEClGvsdzCQSpeB7MXIQKBgFfbkHJCbYa93FKXLnZYDVgSwpB4aif5o26NKojPf0mOqsG8vmtcMI+cGjARPd5msPfoKOAASSrFO7mhpa+lXLNHVVYD/4r/YlUs2NGjdV5QtnFjcrZT714ts0uSzQCSx11u+8AjvGrHI++DiOP6VAazUGMQROh47LPBPTle5iuHAoGBAKCqSoBwqs6PT9XZxQ2ow9C4bm00QM8nZ/wdl9J3qBZF1zIdYpK0SgzXppFcW/N5ndnjcRUc2UfKIPM3qgZ+NJad+pHgqmnKKeBmlDOuTLl46P2VNqSKYXSs+BUXAuCgl0rqzPfWXsQCZDKFucHUrZr9TH5KulvWWy6EZXzTwcGi
-----END RSA PRIVATE KEY-----"""

DING_URL="https://oapi.dingtalk.com/robot/send?access_token=f36bbba055c8cc9cd5cfad6ef4caf5a8cc54975ce61c29be6979fdfe9a5efc5f"


import djcelery #导入django-celery模块
djcelery.setup_loader()  #:进行celery加载
BROKER_URL="redis://127.0.0.1:6379/1"  #任务容器地址，redis数据库地址
CELERY_IMPORTS=('CeleryTask.tasks')  #:具体任务文件
CELERY_TIMEZONE='Asia/Shanghai'
CELERYBEAT_SCHEDULER="djcelery.schedulers.DatabaseScheduler"  #celery事件的处理器,固定

from celery.schedules import crontab
from celery.schedules import timedelta

CELERYBEAT_SCHEDULE={
    u"测试任务1":{
        "task":"CeleryTask.tasks.sendDing",  #:任务函数
        "schedule":timedelta(seconds=5),  #：执行时间
        # "age":()
    }
}

# Crontab
# Crontab(hour=” * / 2”) #每2个小时执行一次
# Crontab(minute=0, hour=” * / 2”) #每2个小时的0分执行一次
# Crontab(minute=0, hour=” * / 2，8 - 12”) #每2个小时或者8点 - 12点执行一次
# Crontab(minute=0, hour=0，day_of_month =”2 - 31 / 2”) #偶数天执行
# Crontab(0，0，day_of_month =“1”，month_of_year =”5”) #每年的5月1号执行

# Timedelta
# Timedelte(seconds=1)  #每秒执行一次


ERROR_PATH=os.path.join(BASE_DIR,"error.log")
#

CACHES = {
    'default': {
        # 'BACKEND': 'django.core.cache.backends.locmem.LocMemCache', #:使用本地作为缓存
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',  #：使用memcache作为缓存
        'LOCATION':[
            "127.0.0.1:11211"  #:本地memcache的地址端口
        ]
    }
}
CACHE_MIDDLEWARE_KEY_PREFIX = ''
CACHE_MIDDLEWARE_SECONDS = 600
CACHE_MIDDLEWARE_ALIAS = 'default'


LOGGING={
    "version":1,
    "disable_existing_logger":False,#是否禁用之前的日志
    "handlers":{
        'file':{
            "level":"DEBUG",
            'class':'logging.FileHandler',
            'filename':os.path.join(BASE_DIR,'django.log')
        }
    },
    'loggers':{
        'django':{
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True
        }
    }
}





